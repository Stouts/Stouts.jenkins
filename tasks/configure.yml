---

- name: jenkins-configure | Configure Jenkins Service
  template:
    dest: "{{ jenkins_configuration }}"
    src: jenkins.j2
  register: jenkins_service_configure

- name: jenkins-configure | Create home folder
  file:
    mode: 0755
    owner: "{{ jenkins_user }}"
    path: "{{ jenkins_home }}"
    state: directory

- name: jenkins-configure | Ensure Jenkins restarted if needed
  service:
    name: jenkins
    state: restarted
  changed_when: False
  when: jenkins_service_configure.changed

- name: jenkins-configure | Ensure Jenkins running
  service:
    name: jenkins
    state: started
  changed_when: False
  when: not jenkins_service_configure.changed

- name: Wait untils Jenkins web API is available
  shell: curl --head --silent {{ jenkins_url }}/cli/
  delay: 10
  retries: 12
  until: result.stdout.find("200 OK") != -1
  register: result
  changed_when: False
  when: jenkins_service_configure.changed

- name: jenkins-configure | Copy jenkins-cli
  get_url: url={{ jenkins_url }}/jnlpJars/jenkins-cli.jar dest={{ jenkins_home }}/jenkins-cli.jar
  register: jenkins_cli
  until: "'OK' in jenkins_cli.msg or 'file already exists' in jenkins_cli.msg"
  retries: 10
  delay: 10

- name: jenkins-configure | Configure Jenkins System
  template: src=jenkins_system_config.xml.j2 dest={{ jenkins_home }}/jenkins.model.JenkinsLocationConfiguration.xml owner=jenkins group=jenkins force=yes
  notify: jenkins reload configuration

- name: Configure log rotation
  template: src=logrotate.conf.j2 dest=/etc/logrotate.d/jenkins.conf
  when: jenkins_logrotate

- name: jenkins-configure | Create build output path
  file: path={{ jenkins_serve_builds_dir }} state=directory mode=0755 owner={{ jenkins_user }}
  when: jenkins_serve_builds_dir != ""
